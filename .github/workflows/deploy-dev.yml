name: Build & Deploy Dev

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - run: yarn install --immutable
      - run: yarn lint
      - run: yarn test --configuration=ci
      - run: yarn build
      - name: Archive dist
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/bedsuite-web-frontend

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download dist
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Copy files to S3 bucket
        run: |
          aws s3 cp . s3://${{ secrets.S3_DEV_BUCKET }} --recursive --exclude "index.html" --cache-control max-age=31536000
          aws s3 cp index.html s3://${{ secrets.S3_DEV_BUCKET }} --cache-control max-age=0

      - name: Create and wait CloudFront invalidation
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DIST_ID_DEV }} --paths '/index.html' > /var/tmp/invalidation_output.json
          export INVALIDATION_ID="$(cat /var/tmp/invalidation_output.json | grep -o '"Id": "[^"]*' | grep -o '[^"]*$')"
          aws cloudfront wait invalidation-completed --distribution-id ${{ secrets.CLOUDFRONT_DIST_ID_DEV }} --id $INVALIDATION_ID
          aws cloudfront get-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DIST_ID_DEV }} --id $INVALIDATION_ID

      - name: Delete old files in S3 Bucket
        run: |
          aws s3 sync . s3://${{ secrets.S3_DEV_BUCKET }} --delete --exclude "index.html" --cache-control max-age=31536000
